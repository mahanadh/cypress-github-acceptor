name: Test Automation Run

on:
  repository_dispatch:
    types: [Test-Dispatch, Test2-Dispatch]
  pull_request:
    types: [labeled]

jobs:
  test:
    name: Test Automation Run
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set specFile
        id: set-spec
        run: |
          if [ ${{ github.event.action }} == 'Test-Dispatch' ]; then
            echo "specFile=cypress/e2e/1-getting-started/todo.cy.js" >> $GITHUB_ENV
          else
            echo "Invalid event action: ${{ github.event.action }}"
            exit 1
          fi
        shell: bash
      - name: Install Cypress
        run: npx cypress install
      - name: Run Cypress Tests
        run: | 
          npx cypress run --spec ${{ env.specFile }} > test-results.txt
          echo $? > test-exit-code.txt
        continue-on-error: true
      - name: Process Test Results
        id: test-results
        run: |
          if [ -f "test-exit-code.txt" ]; then
            exit_code=$(cat test-exit-code.txt)
            if [ $exit_code -eq 0 ]; then
              echo "pass" > test-status.txt
            else
              echo "fail" > test-status.txt
            fi
          else
            echo "fail" > test-status.txt
          fi
        shell: bash
      - name: Create Comment
        uses: actions/github-script@0.5.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            var fs = require('fs');
            var prNumber = ${{ github.event.number }}
            var testStatus = fs.readFileSync('test-status.txt', 'utf-8');
            var comment = testStatus === 'pass' ? ':white_check_mark: Tests Passed' : ':x: Tests Failed';
            github.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
      
